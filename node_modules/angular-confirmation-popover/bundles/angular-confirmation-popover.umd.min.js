!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("positioning"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-confirmation-popover",["exports","@angular/core","positioning","@angular/common"],t):t(n["angular-confirmation-popover"]={},n.ng.core,null,n.ng.common)}(this,function(n,p,e,o){"use strict";var i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e])};var r=function(){this.confirmText="Confirm",this.cancelText="Cancel",this.confirmButtonType="success",this.cancelButtonType="default",this.placement="top",this.hideConfirmButton=!1,this.hideCancelButton=!1,this.popoverClass="",this.appendToBody=!1,this.reverseButtonOrder=!1},s=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return function(n,t){function e(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}(t,n),t.decorators=[{type:p.Injectable}],t}(r),c=function(){function n(n){this.options=n}return n.prototype.ngAfterViewInit=function(){this.options.onAfterViewInit()},n.decorators=[{type:p.Component,args:[{selector:"mwl-confirmation-popover-window",styles:["\n    .popover {\n      display: block;\n    }\n    .bs-popover-top .arrow, .bs-popover-bottom .arrow {\n      left: 50%;\n    }\n    .bs-popover-left .arrow, .bs-popover-right .arrow {\n      top: 50%;\n    }\n    .btn {\n      transition: none;\n    }\n    .confirm-btns {\n      display: flex;\n      justify-content: space-around;\n    }\n    .confirm-btn-container {\n      flex-basis: 50%;\n    }\n    .confirm-btn-container:not(:first-child) {\n      margin-left: 4px;\n    }\n    .confirm-btn-container:not(:last-child) {\n      margin-right: 4px;\n    }\n    .confirm-btns-reversed {\n      flex-direction: row-reverse;\n    }\n    .confirm-btns-reversed .confirm-btn-container:not(:first-child) {\n      margin-right: 4px;\n      margin-left: 0;\n    }\n    .confirm-btns-reversed .confirm-btn-container:not(:last-child) {\n      margin-right: 0;\n      margin-left: 4px;\n    }\n  "],template:'\n    <ng-template #defaultTemplate let-options="options">\n      <div [ngClass]="[\n        \'popover\',\n        options.placement,\n        \'popover-\' + options.placement,\n        \'bs-popover-\' + options.placement,\n        options.popoverClass\n      ]">\n        <div class="popover-arrow arrow"></div>\n        <h3 class="popover-title popover-header" [innerHTML]="options.popoverTitle"></h3>\n        <div class="popover-content popover-body">\n          <p [innerHTML]="options.popoverMessage"></p>\n          <div class="confirm-btns" [class.confirm-btns-reversed]="options.reverseButtonOrder">\n            <div\n              class="confirm-btn-container"\n              *ngIf="!options.hideCancelButton">\n              <button\n                type="button"\n                [mwlFocus]="options.focusButton === \'cancel\'"\n                [class]="\'btn btn-block btn-\' + options.cancelButtonType"\n                (click)="options.onCancel({clickEvent: $event})"\n                [innerHtml]="options.cancelText">\n              </button>\n            </div>\n            <div\n              class="confirm-btn-container"\n              *ngIf="!options.hideConfirmButton">\n              <button\n                type="button"\n                [mwlFocus]="options.focusButton === \'confirm\'"\n                [class]="\'btn btn-block btn-\' + options.confirmButtonType"\n                (click)="options.onConfirm({clickEvent: $event})"\n                [innerHtml]="options.confirmText">\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="options.customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{options: options}">\n    </ng-template>\n  '}]}],n.ctorParameters=function(){return[{type:s}]},n}(),a=function(){function n(n,t,e,o,i,r){this.viewContainerRef=n,this.elm=t,this.defaultOptions=e,this.cfr=o,this.position=i,this.renderer=r,this.isDisabled=!1,this.isOpen=!1,this.isOpenChange=new p.EventEmitter(!0),this.confirm=new p.EventEmitter,this.cancel=new p.EventEmitter,this.eventListeners=[]}return n.prototype.ngOnInit=function(){this.isOpenChange.emit(!1)},n.prototype.ngOnChanges=function(n){n.isOpen&&(!0===n.isOpen.currentValue?this.showPopover():this.hidePopover())},n.prototype.ngOnDestroy=function(){this.hidePopover()},n.prototype.onConfirm=function(n){this.confirm.emit(n),this.hidePopover()},n.prototype.onCancel=function(n){this.cancel.emit(n),this.hidePopover()},n.prototype.togglePopover=function(){this.popover?this.hidePopover():this.showPopover()},n.prototype.onDocumentClick=function(n){!this.popover||this.elm.nativeElement.contains(n.target)||this.popover.location.nativeElement.contains(n.target)||this.hidePopover()},n.prototype.showPopover=function(){var t=this;if(!this.popover&&!this.isDisabled){setTimeout(function(){t.eventListeners=[t.renderer.listen("document","click",function(n){return t.onDocumentClick(n)}),t.renderer.listen("document","touchend",function(n){return t.onDocumentClick(n)}),t.renderer.listen("window","resize",function(){return t.positionPopover()})]});var e=new s;Object.assign(e,this.defaultOptions,{onConfirm:function(n){t.onConfirm(n)},onCancel:function(n){t.onCancel(n)},onAfterViewInit:function(){t.positionPopover()}});["confirmText","cancelText","placement","confirmButtonType","cancelButtonType","focusButton","hideConfirmButton","hideCancelButton","popoverClass","appendToBody","customTemplate","reverseButtonOrder","popoverTitle","popoverMessage"].forEach(function(n){"undefined"!=typeof t[n]&&(e[n]=t[n])});var n=this.cfr.resolveComponentFactory(c),o=p.Injector.create([{provide:s,useValue:e}],this.viewContainerRef.parentInjector);this.popover=this.viewContainerRef.createComponent(n,this.viewContainerRef.length,o),e.appendToBody&&document.body.appendChild(this.popover.location.nativeElement),this.isOpenChange.emit(!0)}},n.prototype.positionPopover=function(){if(this.popover){var n=this.popover.location.nativeElement.children[0],t=this.position.positionElements(this.elm.nativeElement,n,this.placement||this.defaultOptions.placement,this.appendToBody||this.defaultOptions.appendToBody);this.renderer.setStyle(n,"top",t.top+"px"),this.renderer.setStyle(n,"left",t.left+"px")}},n.prototype.hidePopover=function(){this.popover&&(this.popover.destroy(),delete this.popover,this.isOpenChange.emit(!1),this.eventListeners.forEach(function(n){return n()}),this.eventListeners=[])},n.decorators=[{type:p.Directive,args:[{selector:"[mwlConfirmationPopover]"}]}],n.ctorParameters=function(){return[{type:p.ViewContainerRef},{type:p.ElementRef},{type:r},{type:p.ComponentFactoryResolver},{type:e.Positioning},{type:p.Renderer2}]},n.propDecorators={popoverTitle:[{type:p.Input}],popoverMessage:[{type:p.Input}],confirmText:[{type:p.Input}],cancelText:[{type:p.Input}],placement:[{type:p.Input}],confirmButtonType:[{type:p.Input}],cancelButtonType:[{type:p.Input}],focusButton:[{type:p.Input}],hideConfirmButton:[{type:p.Input}],hideCancelButton:[{type:p.Input}],isDisabled:[{type:p.Input}],isOpen:[{type:p.Input}],customTemplate:[{type:p.Input}],isOpenChange:[{type:p.Output}],confirm:[{type:p.Output}],cancel:[{type:p.Output}],popoverClass:[{type:p.Input}],appendToBody:[{type:p.Input}],reverseButtonOrder:[{type:p.Input}],togglePopover:[{type:p.HostListener,args:["click"]}]},n}(),u=function(){function n(n){this.elm=n}return n.prototype.ngOnChanges=function(n){n.mwlFocus&&!0===this.mwlFocus&&this.elm.nativeElement.focus()},n.decorators=[{type:p.Directive,args:[{selector:"[mwlFocus]"}]}],n.ctorParameters=function(){return[{type:p.ElementRef}]},n.propDecorators={mwlFocus:[{type:p.Input}]},n}(),l=new p.InjectionToken("confirmation popover user options");function f(n){var t=new r;return Object.assign(t,n),t}var t=function(){function t(){}return t.forRoot=function(n){return void 0===n&&(n={}),{ngModule:t,providers:[{provide:l,useValue:n},{provide:r,useFactory:f,deps:[l]},e.Positioning]}},t.decorators=[{type:p.NgModule,args:[{declarations:[a,c,u],imports:[o.CommonModule],exports:[a,u],entryComponents:[c]}]}],t}();n.ConfirmationPopoverModule=t,n.ɵd=r,n.ɵf=s,n.ɵe=c,n.ɵc=a,n.ɵa=l,n.ɵb=f,n.ɵg=u,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=angular-confirmation-popover.umd.min.js.map